{"version":3,"sources":["Test9.js","App.js","reportWebVitals.js","index.js"],"names":["Test9","useState","country","setCountry","console","log","latest","setLatest","data","setData","covidData","globdata","TotalConfirmed","TotalDeaths","TotalRecovered","searchResult","filter","val","index","Country","includes","useEffect","axios","get","then","res","Global","Countries","catch","err","Fragment","TextField","className","id","label","variant","onChange","e","value","target","searchText","charAt","toUpperCase","slice","Typography","display","gutterBottom","map","idx","Card","bg","toLowerCase","text","style","width","Header","Body","Text","Badge","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAyGeA,EAlGD,WAEZ,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOAC,QAAQC,IAAIH,GACZ,MAA4BD,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAGMC,EAAY,CAAC,QAAQ,SAAS,WAE9BC,EAAW,CADoCL,EAA9CM,eAA8CN,EAA9BO,YAA8BP,EAAlBQ,gBAG7BC,EAAeP,EAAKQ,QAAO,SAACC,EAAIC,GACpC,MAAiB,KAAVhB,EAAae,EAAIE,QAAQC,SAASlB,GAASe,KAqBpD,OAnBAb,QAAQC,IAAIU,GAIZM,qBAAU,WACRC,IAAMC,IAAI,sCACTC,MAAK,SAAAC,GACJlB,EAAUkB,EAAIjB,KAAKkB,QACnBjB,EAAQgB,EAAIjB,KAAKmB,cAGlBC,OAAM,SAAAC,GACLzB,QAAQC,IAAIwB,QAGd,IAKA,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,GAAG,iBAAiBC,MAAM,iBAAiBC,QAAQ,WAAWC,SAvC5E,SAACC,GACjB,IAAOC,EAASD,EAAEE,OAAXD,MACDE,EAAcF,EAAMG,OAAO,GAAGC,cAAcJ,EAAMK,MAAM,GAC9DxC,EAAWqC,MAqCV,cAACI,EAAA,EAAD,CAAYZ,UAAU,MAAMG,QAAQ,WAAWU,QAAQ,QAAQC,cAAY,EAA3E,SACK5C,IAEN,qBAAK8B,UAAU,4BAAf,SAjCe,CAAC,OAAO,SAAS,WAkCpBe,KAAI,SAACZ,EAASa,GACtB,OACE,eAACC,EAAA,EAAD,CACEC,GAAIf,EAAQgB,cAEZC,KAAgC,UAA1BjB,EAAQgB,cAA4B,OAAS,QACnDE,MAAO,CAAEC,MAAO,SAChBtB,UAAU,MALZ,UAOE,cAACiB,EAAA,EAAKM,OAAN,UAAc7C,EAAUsC,KACxB,cAACC,EAAA,EAAKO,KAAN,UACE,cAACP,EAAA,EAAKQ,KAAN,UACG9C,EAASqC,SARTA,QAiBX,qBAAKhB,UAAU,4BAAf,SACCjB,EAAagC,KAAI,SAACZ,EAASa,GAC1B,OACE,eAACC,EAAA,EAAD,CACEC,GAAG,UAEHG,MAAO,CAAEC,MAAO,SAChBtB,UAAU,MAJZ,UAME,cAACiB,EAAA,EAAKM,OAAN,UAAcpB,EAAQhB,UACtB,eAAC8B,EAAA,EAAKO,KAAN,WACA,eAACP,EAAA,EAAKQ,KAAN,+BACqB,cAACC,EAAA,EAAD,CAAOR,GAAG,OAAV,SAAkBf,EAAQvB,oBAE7C,eAACqC,EAAA,EAAKQ,KAAN,4BACgB,cAACC,EAAA,EAAD,CAAOR,GAAG,SAAV,SAAoBf,EAAQtB,iBAE5C,eAACoC,EAAA,EAAKQ,KAAN,+BACmB,cAACC,EAAA,EAAD,CAAOR,GAAG,UAAV,SAAqBf,EAAQrB,yBAb7CkC,YClEFW,MAXf,WACE,OACE,cAAC,IAAM7B,SAAP,UACE,qBAAKE,UAAU,YAAf,SACE,cAAC,EAAD,SCKO4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b4289ec7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst Test9 = () => {\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n  const findCountry=(e)=>{\r\n    const {value} = e.target;\r\n    const searchText =  value.charAt(0).toUpperCase()+value.slice(1);\r\n    setCountry(searchText);\r\n  }\r\n\r\n  console.log(country);\r\n  const [latest, setLatest] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const colorSet = ['info','Danger','Success'];\r\n  const covidData = ['cases','deaths','recover'];\r\n  const {TotalConfirmed, TotalDeaths,TotalRecovered} = latest;\r\n  const globdata = [TotalConfirmed,TotalDeaths,TotalRecovered];\r\n\r\n  const searchResult = data.filter((val,index)=>{\r\n    return country!==\"\"?val.Country.includes(country):val;\r\n  }) \r\n  console.log(searchResult);\r\n\r\n\r\n  //useeffect start\r\n  useEffect(()=>{\r\n    axios.get('https://api.covid19api.com/summary')\r\n    .then(res=>{\r\n      setLatest(res.data.Global);\r\n      setData(res.data.Countries);\r\n\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    }\r\n    )\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TextField className=\"mt-5\" id=\"standard-basic\" label=\"Search Country\" variant=\"standard\" onChange={findCountry}/>\r\n     <Typography className=\"m-2\" variant=\"overline\" display=\"block\" gutterBottom>\r\n         {country}\r\n      </Typography>\r\n    <div className=\"d-flex flex-row flex-wrap\">\r\n      {colorSet.map((variant, idx) => {\r\n        return (\r\n          <Card\r\n            bg={variant.toLowerCase()}\r\n            key={idx}\r\n            text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n            style={{ width: \"18rem\" }}\r\n            className=\"m-2\"\r\n          >\r\n            <Card.Header>{covidData[idx]}</Card.Header>\r\n            <Card.Body>\r\n              <Card.Text>\r\n                {globdata[idx]}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })}\r\n      </div>\r\n\r\n\r\n      <div className=\"d-flex flex-row flex-wrap\">\r\n      {searchResult.map((variant, idx) => {\r\n        return (\r\n          <Card\r\n            bg=\"Success\"\r\n            key={idx}\r\n            style={{ width: \"18rem\" }}\r\n            className=\"m-2\"\r\n          >\r\n            <Card.Header>{variant.Country}</Card.Header>\r\n            <Card.Body>\r\n            <Card.Text>\r\n                TotalConfirmed:  <Badge bg=\"info\">{variant.TotalConfirmed}</Badge>\r\n              </Card.Text>\r\n              <Card.Text>\r\n                TotalDeaths:  <Badge bg=\"danger\">{variant.TotalDeaths}</Badge>\r\n              </Card.Text>\r\n              <Card.Text>\r\n                TotalRecovered:  <Badge bg=\"success\">{variant.TotalRecovered}</Badge>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })}\r\n      </div>\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Test9;\r\n","import React from 'react';\r\nimport Test9 from './Test9';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <Test9/>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}